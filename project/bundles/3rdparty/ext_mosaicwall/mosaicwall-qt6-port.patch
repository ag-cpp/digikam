From 08a8db412e767d5b8d789df25db2b18109ef00db Mon Sep 17 00:00:00 2001
From: Gilles Caulier <caulier.gilles@gmail.com>
Date: Tue, 17 Oct 2023 11:44:08 +0200
Subject: [PATCH 1/5] port to Qt6 ++

---
 CMakeLists.txt                | 77 ++++++++++++++++++++++-----------
 bootstrap-linux.sh            |  5 ++-
 cmake/modules/i18nUtils.cmake | 81 +++++++++++++++++++++++++++--------
 dplugin/CMakeLists.txt        |  8 ++--
 imageviewer.cpp               | 32 +++++++++++++-
 5 files changed, 153 insertions(+), 50 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 84ebbb6..ec6d70e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -9,6 +9,7 @@ project(ImageMosaicWall)
 cmake_minimum_required(VERSION "3.1.0")
 
 option(ENABLE_DPLUGIN "Build digiKam plugin version of Image Mosaic Wall tool (default=OFF)" OFF)
+option(BUILD_WITH_QT6 "Build with Qt6, else Qt5"                                             OFF)
 
 set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules ${CMAKE_MODULE_PATH})
 if (ENABLE_DPLUGIN)
@@ -23,7 +24,7 @@ endif()
 
 include(FeatureSummary)
 
-set(CMAKE_CXX_STANDARD 11)
+set(CMAKE_CXX_STANDARD 17)
 
 if(CMAKE_VERSION VERSION_LESS "3.7.0")
     set(CMAKE_INCLUDE_CURRENT_DIR ON)
@@ -34,13 +35,31 @@ set(CMAKE_AUTORCC ON)
 set(CMAKE_AUTOUIC ON)
 
 
-find_package(Qt5 "5.6.0" REQUIRED
-             NO_MODULE COMPONENTS
-             Core
-             Widgets
-             Gui
-             Concurrent
-)
+if(BUILD_WITH_QT6)
+
+    find_package(Qt6 "6.5.0" REQUIRED
+                 NO_MODULE COMPONENTS
+                 Core
+                 Widgets
+                 Gui
+                 Concurrent
+    )
+
+    set(QT_VERSION_MAJOR 6)
+
+else()
+
+    find_package(Qt5 "5.6.0" REQUIRED
+                 NO_MODULE COMPONENTS
+                 Core
+                 Widgets
+                 Gui
+                 Concurrent
+    )
+
+    set(QT_VERSION_MAJOR 5)
+
+endif()
 
 find_package(Threads)
 
@@ -56,10 +75,10 @@ set_package_properties("exiv2"     PROPERTIES
 include(i18nUtils)
 
 include_directories($<TARGET_PROPERTY:exiv2lib,INTERFACE_INCLUDE_DIRECTORIES>
-                    $<TARGET_PROPERTY:Qt5::Widgets,INTERFACE_INCLUDE_DIRECTORIES>
-                    $<TARGET_PROPERTY:Qt5::Core,INTERFACE_INCLUDE_DIRECTORIES>
-                    $<TARGET_PROPERTY:Qt5::Gui,INTERFACE_INCLUDE_DIRECTORIES>
-                    $<TARGET_PROPERTY:Qt5::Concurrent,INTERFACE_INCLUDE_DIRECTORIES>
+                    $<TARGET_PROPERTY:Qt${QT_VERSION_MAJOR}::Widgets,INTERFACE_INCLUDE_DIRECTORIES>
+                    $<TARGET_PROPERTY:Qt${QT_VERSION_MAJOR}::Core,INTERFACE_INCLUDE_DIRECTORIES>
+                    $<TARGET_PROPERTY:Qt${QT_VERSION_MAJOR}::Gui,INTERFACE_INCLUDE_DIRECTORIES>
+                    $<TARGET_PROPERTY:Qt${QT_VERSION_MAJOR}::Concurrent,INTERFACE_INCLUDE_DIRECTORIES>
 
                     ${CMAKE_BINARY_DIR}
                     ${CMAKE_SOURCE_DIR}
@@ -74,13 +93,26 @@ set(imagemosaicwall_core_SRCS ${CMAKE_SOURCE_DIR}/mainwindow.cpp
                               ${i18n_QM}
 )
 
-qt5_wrap_ui(imagemosaicwall_core_SRCS ${CMAKE_SOURCE_DIR}/mainwindow.ui
-                                      ${CMAKE_SOURCE_DIR}/imageviewer.ui
-)
 
-qt5_add_resources(imagemosaicwall_core_QRC_SRCS ${CMAKE_SOURCE_DIR}/assets.qrc)
+if(Qt6_FOUND)
+
+    qt6_wrap_ui(imagemosaicwall_core_SRCS ${CMAKE_SOURCE_DIR}/mainwindow.ui
+                                          ${CMAKE_SOURCE_DIR}/imageviewer.ui
+    )
 
-set(libimagemosaicwall_core_SRCS    
+    qt6_add_resources(imagemosaicwall_core_QRC_SRCS ${CMAKE_SOURCE_DIR}/assets.qrc)
+
+else()
+
+    qt5_wrap_ui(imagemosaicwall_core_SRCS ${CMAKE_SOURCE_DIR}/mainwindow.ui
+                                          ${CMAKE_SOURCE_DIR}/imageviewer.ui
+    )
+
+    qt5_add_resources(imagemosaicwall_core_QRC_SRCS ${CMAKE_SOURCE_DIR}/assets.qrc)
+
+endif()
+
+set(libimagemosaicwall_core_SRCS
     ${imagemosaicwall_core_SRCS}
     ${imagemosaicwall_core_QRC_SRCS}
 )
@@ -91,23 +123,20 @@ if(NOT MSVC)
     target_compile_options(imagemosaicwallcore PRIVATE -fPIC)
 endif()
 
-
 if(APPLE)
   add_executable(ImageMosaicWall MACOSX_BUNDLE ${OSX_APP_ICON} ${CMAKE_CURRENT_SOURCE_DIR}/main.cpp)
 else()
   add_executable(ImageMosaicWall ${CMAKE_CURRENT_SOURCE_DIR}/main.cpp)
 endif()
 
-
-
 target_link_libraries(ImageMosaicWall
 
                       imagemosaicwallcore
 
-                      Qt5::Core
-                      Qt5::Widgets
-                      Qt5::Gui
-                      Qt5::Concurrent
+                      Qt${QT_VERSION_MAJOR}::Core
+                      Qt${QT_VERSION_MAJOR}::Widgets
+                      Qt${QT_VERSION_MAJOR}::Gui
+                      Qt${QT_VERSION_MAJOR}::Concurrent
 
                       exiv2lib
                       ${CMAKE_THREAD_LIBS_INIT}
diff --git a/bootstrap-linux.sh b/bootstrap-linux.sh
index 8bd74da..8cbf2be 100755
diff --git a/cmake/modules/i18nUtils.cmake b/cmake/modules/i18nUtils.cmake
index bd9f342..f675dd1 100644
--- a/cmake/modules/i18nUtils.cmake
+++ b/cmake/modules/i18nUtils.cmake
@@ -1,16 +1,28 @@
 #
-# Copyright (c) 2020 by Gilles Caulier, <caulier dot gilles at gmail dot com>
+# Copyright (c) 2020-2023 by Gilles Caulier, <caulier dot gilles at gmail dot com>
 #
 # Redistribution and use is allowed according to the terms of the BSD license.
 # For details see the accompanying COPYING-CMAKE-SCRIPTS file.
 
 # --- Translations rules (i18n)
 
-find_package(Qt5 "5.6.0" REQUIRED
-             NO_MODULE COMPONENTS
-             Core
-             LinguistTools              # for i18n
-)
+if(Qt6_FOUND)
+
+    find_package(Qt6 "6.5.0" REQUIRED
+                 NO_MODULE COMPONENTS
+                 Core
+                 LinguistTools              # for i18n
+    )
+
+else()
+
+    find_package(Qt5 "5.6.0" REQUIRED
+                 NO_MODULE COMPONENTS
+                 Core
+                 LinguistTools              # for i18n
+    )
+
+endif()
 
 include(${CMAKE_CURRENT_SOURCE_DIR}/i18n/i18n_list.cmake)
 
@@ -20,22 +32,43 @@ foreach(file ${translation_files})
 
     if(NOT EXISTS "${file}")
 
-       message(STATUS "Translation file ${file} do not exists yet.")
-       message(STATUS "It will be created in ${CMAKE_CURRENT_SOURCE_DIR}/i18n")
-       message(STATUS "Don't forget to add this new file on git repository.")
+        message(STATUS "Translation file ${file} do not exists yet.")
+        message(STATUS "It will be created in ${CMAKE_CURRENT_SOURCE_DIR}/i18n")
+        message(STATUS "Don't forget to add this new file on git repository.")
+
+        if(Qt6_FOUND)
+
+            qt6_create_translation(missing_i18n_QM
+                                  ${CMAKE_CURRENT_SOURCE_DIR}
+                                  ${file}
+            )
+
+        else()
+
+            qt5_create_translation(missing_i18n_QM
+                                  ${CMAKE_CURRENT_SOURCE_DIR}
+                                  ${file}
+            )
 
-       qt5_create_translation(missing_i18n_QM
-                              ${CMAKE_CURRENT_SOURCE_DIR}
-                              ${file}
-       )
+        endif()
 
     endif()
 
 endforeach()
 
-qt5_add_translation(i18n_QM
-                    ${translation_files}
-)
+if(Qt6_FOUND)
+
+    qt6_add_translation(i18n_QM
+                        ${translation_files}
+    )
+
+else()
+
+    qt5_add_translation(i18n_QM
+                        ${translation_files}
+    )
+
+endif()
 
 foreach(file ${i18n_QM})
 
@@ -48,6 +81,16 @@ endforeach()
 
 configure_file(${CMAKE_SOURCE_DIR}/cmake/templates/i18n.qrc.in_cmake ${CMAKE_CURRENT_BINARY_DIR}/i18n.qrc)
 
-qt5_add_resources(i18n_QRC_SRCS
-                  ${CMAKE_CURRENT_BINARY_DIR}/i18n.qrc
-)
+if(Qt6_FOUND)
+
+    qt6_add_resources(i18n_QRC_SRCS
+                      ${CMAKE_CURRENT_BINARY_DIR}/i18n.qrc
+    )
+
+else()
+
+    qt5_add_resources(i18n_QRC_SRCS
+                      ${CMAKE_CURRENT_BINARY_DIR}/i18n.qrc
+    )
+
+endif()
diff --git a/dplugin/CMakeLists.txt b/dplugin/CMakeLists.txt
index c0c5080..e7074f3 100644
--- a/dplugin/CMakeLists.txt
+++ b/dplugin/CMakeLists.txt
@@ -31,10 +31,10 @@ target_link_libraries(Generic_ImageMosaicWall_Plugin
 
                       Digikam::digikamcore
 
-                      Qt5::Core
-                      Qt5::Widgets
-                      Qt5::Gui
-                      Qt5::Concurrent
+                      Qt${QT_VERSION_MAJOR}::Core
+                      Qt${QT_VERSION_MAJOR}::Widgets
+                      Qt${QT_VERSION_MAJOR}::Gui
+                      Qt${QT_VERSION_MAJOR}::Concurrent
 
                       exiv2lib
 )
diff --git a/imageviewer.cpp b/imageviewer.cpp
index 0420d4d..b542b62 100644
--- a/imageviewer.cpp
+++ b/imageviewer.cpp
@@ -41,20 +41,50 @@ void ImageViewer::clearPreview()
 
 void ImageViewer::wheelEvent(QWheelEvent *event)
 {
-    const QPointF p0scene = mapToScene(event->pos());
 
+#if (QT_VERSION >= QT_VERSION_CHECK(6, 0, 0))
+
+    const QPointF p0scene = mapToScene(event->position().toPoint());
+    qreal factor = qPow(1.2, event->angleDelta().y() / 240.0);
+
+#else
+
+    const QPointF p0scene = mapToScene(event->pos());
     qreal factor = qPow(1.2, event->delta() / 240.0);
+
+#endif
+
     scale(factor, factor);
 
     const QPointF p1mouse = mapFromScene(p0scene);
+
+#if (QT_VERSION >= QT_VERSION_CHECK(6, 0, 0))
+
+    const QPointF move = p1mouse - event->position().toPoint(); // The move
+
+#else
+
     const QPointF move = p1mouse - event->pos(); // The move
+
+#endif
+
     horizontalScrollBar()->setValue(move.x() + horizontalScrollBar()->value());
     verticalScrollBar()->setValue(move.y() + verticalScrollBar()->value());
 }
 
 void ImageViewer::fitToScene(const QImage &img)
 {
+
+#if (QT_VERSION >= QT_VERSION_CHECK(6, 0, 0))
+
+    resetTransform();
+
+#else
+
     resetMatrix();
+
+#endif
+
     QSize s = parentWidget()->size();
     setSceneRect(0.0, 0.0, img.width(), img.height());
     float sx = s.width() / (float)img.width();

From c6e63aa56b19d5ede87c9d47bee7f0c7127a80a0 Mon Sep 17 00:00:00 2001
From: Gilles Caulier <caulier.gilles@gmail.com>
Date: Tue, 17 Oct 2023 12:14:33 +0200
Subject: [PATCH 2/5] qt6 port ++

---
 imageprocessing.cpp | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/imageprocessing.cpp b/imageprocessing.cpp
index 528ff53..407d943 100644
--- a/imageprocessing.cpp
+++ b/imageprocessing.cpp
@@ -61,8 +61,18 @@ bool ImageProcessing::generateImage(QSize outputSize, QSize gridSize, int histor
             numCellsPerThread += numCells % maxThreads;
         }
 
+#if (QT_VERSION >= QT_VERSION_CHECK(6, 0, 0))
+
+        QtConcurrent::run(
+            &pool, &ImageProcessing::calculateMosaicPositions, this, gridSize, t * itemsPerThread, numCellsPerThread);
+
+#else
+
         QtConcurrent::run(
             &pool, this, &ImageProcessing::calculateMosaicPositions, gridSize, t * itemsPerThread, numCellsPerThread);
+
+#endif
+
     }
 
     pool.waitForDone();

From 31624c5d8ea4ff5a56549f52dc92c04e8bedf276 Mon Sep 17 00:00:00 2001
From: Gilles Caulier <caulier.gilles@gmail.com>
Date: Tue, 17 Oct 2023 15:58:20 +0200
Subject: [PATCH 3/5] port to Qt6++

---
 dplugin/CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/dplugin/CMakeLists.txt b/dplugin/CMakeLists.txt
index e7074f3..3dd6f83 100644
--- a/dplugin/CMakeLists.txt
+++ b/dplugin/CMakeLists.txt
@@ -12,7 +12,7 @@ set_package_properties(DigikamCore PROPERTIES
                        DESCRIPTION "digiKam core library"
 )
 
-include_directories($<TARGET_PROPERTY:Digikam::digikamcore,INTERFACE_INCLUDE_DIRECTORIES>/digikam
+include_directories(${CMAKE_INSTALL_FULL_INCLUDEDIR}/digikam
                     ${CMAKE_CURRENT_BINARY_DIR}
                     ${CMAKE_CURRENT_SOURCE_DIR}
                     ${CMAKE_BINARY_DIR}

From 680fb9291087f2e9d6133c4d608cd6e89d413726 Mon Sep 17 00:00:00 2001
From: Gilles Caulier <caulier.gilles@gmail.com>
Date: Tue, 17 Oct 2023 16:01:22 +0200
Subject: [PATCH 4/5] revert

---
 bootstrap-linux.sh | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/bootstrap-linux.sh b/bootstrap-linux.sh
index 8cbf2be..0762304 100755

From f246d3f88bb083f2d8f5e52a5960797be0880fcc Mon Sep 17 00:00:00 2001
From: Gilles Caulier <caulier.gilles@gmail.com>
Date: Wed, 18 Oct 2023 10:37:59 +0200
Subject: [PATCH 5/5] better way to handle digikam core includes path

---
 dplugin/CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/dplugin/CMakeLists.txt b/dplugin/CMakeLists.txt
index 3dd6f83..2842f45 100644
--- a/dplugin/CMakeLists.txt
+++ b/dplugin/CMakeLists.txt
@@ -12,7 +12,7 @@ set_package_properties(DigikamCore PROPERTIES
                        DESCRIPTION "digiKam core library"
 )
 
-include_directories(${CMAKE_INSTALL_FULL_INCLUDEDIR}/digikam
+include_directories($<TARGET_PROPERTY:Digikam::digikamcore,INTERFACE_INCLUDE_DIRECTORIES>
                     ${CMAKE_CURRENT_BINARY_DIR}
                     ${CMAKE_CURRENT_SOURCE_DIR}
                     ${CMAKE_BINARY_DIR}
