diff --git a/CMakeLists.txt b/CMakeLists.txt
index b9d10ece..ebc93a71 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -13,7 +13,7 @@ include(GenerateExportHeader)
 include(WriteBasicConfigVersionFile)
 include(FeatureSummary)
 
-find_package(ECM ${KF5_MIN_VERSION} REQUIRED NO_MODULE)
+find_package(ECM ${KF6_MIN_VERSION} REQUIRED NO_MODULE)
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${ECM_MODULE_PATH}  ${CMAKE_SOURCE_DIR}/cmake)
 
 set(CMAKE_CXX_STANDARD 20)
@@ -116,16 +116,16 @@ function(build_Qt6)
         I18n
         IconThemes
         WindowSystem)
-    if(NOT WIN32 AND NOT APPLE)
-        find_package(KF6KCMUtils ${KF6_MIN_VERSION})
-        set_package_properties(KF6KCMUtils PROPERTIES
-            TYPE REQUIRED
-            DESCRIPTION "Helps create configuration modules"
-            PURPOSE "KCMUtils used for the configuration modules or the decoration and Qt Style"
-        )
-    endif()
-
-    find_package(Qt6 ${QT_MIN_VERSION} OPTIONAL_COMPONENTS Quick)
+#    if(NOT WIN32 AND NOT APPLE)
+#        find_package(KF6KCMUtils ${KF6_MIN_VERSION})
+#        set_package_properties(KF6KCMUtils PROPERTIES
+#            TYPE REQUIRED
+#            DESCRIPTION "Helps create configuration modules"
+#            PURPOSE "KCMUtils used for the configuration modules or the decoration and Qt Style"
+#        )
+#    endif()
+
+#    find_package(Qt6 ${QT_MIN_VERSION} OPTIONAL_COMPONENTS Quick)
     if(${Qt6Quick_FOUND})
         find_package(KF6 ${KF6_MIN_VERSION} REQUIRED COMPONENTS Kirigami2)
     endif()
