diff --git a/CMakeLists.txt b/CMakeLists.txt
index 04dc4d6a..e4584cec 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -13,7 +13,7 @@ include(GenerateExportHeader)
 include(WriteBasicConfigVersionFile)
 include(FeatureSummary)
 
-find_package(ECM ${KF5_MIN_VERSION} REQUIRED NO_MODULE)
+find_package(ECM ${KF6_MIN_VERSION} REQUIRED NO_MODULE)
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${ECM_MODULE_PATH}  ${CMAKE_SOURCE_DIR}/cmake)
 
 set(CMAKE_CXX_STANDARD 20)
@@ -110,21 +110,21 @@     option(WITH_DECORATIONS "Build Breeze window decorations for KWin" ON)
     option(WITH_WALLPAPERS "Install Breeze default wallpapers" ON)

-    find_package(Qt6 ${QT_MIN_VERSION} REQUIRED CONFIG COMPONENTS Widgets DBus)
+    find_package(Qt6 ${QT_MIN_VERSION} REQUIRED CONFIG COMPONENTS Widgets DBus OpenGL Network)
     find_package(KF6 ${KF6_MIN_VERSION} REQUIRED COMPONENTS
         CoreAddons
         ColorScheme
         Config
         GuiAddons
         I18n
         IconThemes
         WindowSystem)
     if(NOT WIN32 AND NOT APPLE)
-        find_package(KF6KCMUtils ${KF6_MIN_VERSION})
-        set_package_properties(KF6KCMUtils PROPERTIES
-            TYPE REQUIRED
-            DESCRIPTION "Helps create configuration modules"
-            PURPOSE "KCMUtils used for the configuration modules or the decoration and Qt Style"
-        )
+ #        find_package(KF6KCMUtils ${KF6_MIN_VERSION})
+ #        set_package_properties(KF6KCMUtils PROPERTIES
+ #            TYPE REQUIRED
+ #            DESCRIPTION "Helps create configuration modules"
+ #            PURPOSE "KCMUtils used for the configuration modules or the decoration and Qt Style"
+ #        )
     endif()

 #    find_package(Qt6 ${QT_MIN_VERSION} OPTIONAL_COMPONENTS Quick)
@@ -144,7 +144,7 @@ function(build_Qt6)
         IconThemes
         WindowSystem)
 
-    find_package(Qt6 ${QT_MIN_VERSION} OPTIONAL_COMPONENTS Quick)
+#    find_package(Qt6 ${QT_MIN_VERSION} OPTIONAL_COMPONENTS Quick)
     if(${Qt6Quick_FOUND})
         find_package(KF6KirigamiPlatform ${KF6_MIN_VERSION} REQUIRED)
     endif()
