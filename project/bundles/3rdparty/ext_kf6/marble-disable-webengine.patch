diff --git a/CMakeLists.txt b/CMakeLists.txt
index a06737a29..0e4fa44b8 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -135,19 +135,19 @@ include( MarbleMacros )
 find_package(Protobuf)
 set_package_properties(Protobuf PROPERTIES TYPE OPTIONAL PURPOSE "Parsing of OSM PBF files.")
 
-if(ANDROID)
-    find_package(Qt6Positioning ${REQUIRED_QT_VERSION} REQUIRED)
-    find_package(Qt6Multimedia ${REQUIRED_QT_VERSION} REQUIRED)
-
-   set ( MARBLE_NO_WEBKITWIDGETS TRUE )
-else()
-    find_package(Qt6WebChannel ${REQUIRED_QT_VERSION})
-    find_package(Qt6WebEngineWidgets ${REQUIRED_QT_VERSION})
-
-   if ( NOT Qt6WebEngineWidgets_FOUND )
+#if(ANDROID)
+#    find_package(Qt6Positioning ${REQUIRED_QT_VERSION} REQUIRED)
+#    find_package(Qt6Multimedia ${REQUIRED_QT_VERSION} REQUIRED)
+#
+#   set ( MARBLE_NO_WEBKITWIDGETS TRUE )
+#else()
+#    find_package(Qt6WebChannel ${REQUIRED_QT_VERSION})
+#    find_package(Qt6WebEngineWidgets ${REQUIRED_QT_VERSION})
+#
+#   if ( NOT Qt6WebEngineWidgets_FOUND )
      set ( MARBLE_NO_WEBKITWIDGETS TRUE )
-   endif()
-endif()
+#   endif()
+#endif()
 
 if (BUILD_WITH_DBUS)
   find_package(Qt6DBus ${REQUIRED_QT_VERSION})
diff --git a/src/lib/marble/CMakeLists.txt b/src/lib/marble/CMakeLists.txt
index 15f11649b..59522e242 100644
--- a/src/lib/marble/CMakeLists.txt
+++ b/src/lib/marble/CMakeLists.txt
@@ -127,7 +127,7 @@ set(marblewidget_SRCS
     PluginManager.cpp
     TimeControlWidget.cpp
     AbstractFloatItem.cpp
-    PopupItem.cpp
+#    PopupItem.cpp
     MarbleGlobal.cpp
     MarbleDirs.cpp
     MarbleLocale.cpp
diff --git a/src/lib/marble/layers/PopupLayer.cpp b/src/lib/marble/layers/PopupLayer.cpp
index b654fad76..1f637b0b0 100644
--- a/src/lib/marble/layers/PopupLayer.cpp
+++ b/src/lib/marble/layers/PopupLayer.cpp
@@ -11,7 +11,7 @@
 #include "GeoDataCoordinates.h"
 #include "GeoPainter.h"
 #include "MarbleWidget.h"
-#include "PopupItem.h"
+//#include "PopupItem.h"
 #include "ViewportParams.h"
 #include "RenderPlugin.h"
 #include "RenderState.h"
@@ -39,7 +39,7 @@ public:
     void setupDialogGeoPlaces( const GeoDataPlacemark *index );
     void setupDialogSkyPlaces( const GeoDataPlacemark *index );
 
-    PopupItem *const m_popupItem;
+ //   PopupItem *const m_popupItem;
     MarbleWidget *const m_widget;
     QSizeF m_requestedSize;
     bool m_hasCrosshairsPlugin;
@@ -47,10 +47,10 @@ public:
 };
 
 PopupLayer::Private::Private( MarbleWidget *marbleWidget, PopupLayer *q ) :
-    m_popupItem( new PopupItem( q ) ),
+//    m_popupItem( new PopupItem( q ) ),
     m_widget( marbleWidget ),
     m_hasCrosshairsPlugin( false ),
-    m_crosshairsVisible( true )
+    m_crosshairsVisible( false )
 {
 }
 
@@ -58,6 +58,7 @@ PopupLayer::PopupLayer( MarbleWidget *marbleWidget, QObject *parent ) :
     QObject( parent ),
     d( new Private( marbleWidget, this ) )
 {
+/*
     for (const RenderPlugin *renderPlugin: d->m_widget->renderPlugins()) {
         if (renderPlugin->nameId() == QLatin1String("crosshairs")) {
             d->m_hasCrosshairsPlugin = true;
@@ -67,6 +68,7 @@ PopupLayer::PopupLayer( MarbleWidget *marbleWidget, QObject *parent ) :
 
     connect( d->m_popupItem, SIGNAL(repaintNeeded()), this, SIGNAL(repaintNeeded()) );
     connect( d->m_popupItem, SIGNAL(hide()), this, SLOT(hidePopupItem()) );
+*/
 }
 
 PopupLayer::~PopupLayer()
@@ -82,14 +84,15 @@ QStringList PopupLayer::renderPosition() const
 bool PopupLayer::render( GeoPainter *painter, ViewportParams *viewport,
                                 const QString&, GeoSceneLayer* )
 {
+/*
     if ( visible() ) {
         d->setAppropriateSize( viewport );
         d->m_popupItem->paintEvent( painter, viewport );
     }
-
-    return true;
+*/
+    return false;
 }
-
+/*
 bool PopupLayer::eventFilter( QObject *object, QEvent *e )
 {
     return visible() && d->m_popupItem->eventFilter( object, e );
@@ -104,14 +107,15 @@ RenderState PopupLayer::renderState() const
 {
     return RenderState(QStringLiteral("Popup Window"));
 }
-
+*/
 bool PopupLayer::visible() const
 {
-    return d->m_popupItem->visible();
+    return false; //d->m_popupItem->visible();
 }
 
 void PopupLayer::setVisible( bool visible )
 {
+/*
     d->m_popupItem->setVisible( visible );
     if ( !visible ) {
         disconnect( d->m_popupItem, SIGNAL(repaintNeeded()), this, SIGNAL(repaintNeeded()) );
@@ -121,10 +125,12 @@ void PopupLayer::setVisible( bool visible )
     else {
         connect( d->m_popupItem, SIGNAL(repaintNeeded()), this, SIGNAL(repaintNeeded()) );
     }
+*/
 }
 
 void PopupLayer::popup()
 {
+/*
     GeoDataCoordinates coords = d->m_popupItem->coordinate();
     ViewportParams viewport( d->m_widget->viewport()->projection(),
                              coords.longitude(), coords.latitude(), d->m_widget->viewport()->radius(),
@@ -146,45 +152,53 @@ void PopupLayer::popup()
     }
 
     setVisible( true );
+*/
 }
 
 void PopupLayer::setCoordinates( const GeoDataCoordinates &coordinates , Qt::Alignment alignment )
 {
+/*
     d->m_popupItem->setCoordinate( coordinates );
     d->m_popupItem->setAlignment( alignment );
+*/
 }
 
 void PopupLayer::setUrl( const QUrl &url )
 {
-    d->m_popupItem->setUrl( url );
+//    d->m_popupItem->setUrl( url );
 }
 
 void PopupLayer::setContent( const QString &html, const QUrl &baseUrl )
 {
-    d->m_popupItem->setContent( html, baseUrl );
+//    d->m_popupItem->setContent( html, baseUrl );
 }
 
 void PopupLayer::setBackgroundColor(const QColor &color)
 {
+/*
     if(color.isValid()) {
         d->m_popupItem->setBackgroundColor(color);
     }
+*/
 }
 
 void PopupLayer::setTextColor(const QColor &color)
 {
+/*
     if(color.isValid()) {
         d->m_popupItem->setTextColor(color);
     }
+*/
 }
 
 void PopupLayer::setSize( const QSizeF &size )
 {
-    d->m_requestedSize = size;
+//    d->m_requestedSize = size;
 }
 
 void PopupLayer::Private::setAppropriateSize( const ViewportParams *viewport )
 {
+/*
     qreal margin = 15.0;
 
     QSizeF maximumSize;
@@ -194,14 +208,16 @@ void PopupLayer::Private::setAppropriateSize( const ViewportParams *viewport )
     QSizeF minimumSize( 100.0, 100.0 );
 
     m_popupItem->setSize( m_requestedSize.boundedTo( maximumSize ).expandedTo( minimumSize ) );
+*/
 }
 
 void PopupLayer::hidePopupItem()
 {
+/*
     if( d->m_hasCrosshairsPlugin && d->m_crosshairsVisible ) {
         d->m_widget->setShowCrosshairs( d->m_crosshairsVisible );
     }
-
+*/
     setVisible( false );
 }
 
diff --git a/src/lib/marble/layers/PopupLayer.h b/src/lib/marble/layers/PopupLayer.h
index 2a487735a..6311db0f0 100644
--- a/src/lib/marble/layers/PopupLayer.h
+++ b/src/lib/marble/layers/PopupLayer.h
@@ -38,13 +38,14 @@ public:
     QStringList renderPosition() const override;
     bool render( GeoPainter *painter, ViewportParams *viewport,
                  const QString &, GeoSceneLayer * ) override;
+/*
     bool eventFilter( QObject *, QEvent * ) override;
     qreal zValue() const override;
 
     RenderState renderState() const override;
 
     QString runtimeTrace() const override { return QStringLiteral("PopupLayer"); }
-
+*/
     /**
      * @brief Is popup item visible
      *
